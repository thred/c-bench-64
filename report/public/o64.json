{
  "key": "o64",
  "name": "Oscar64",
  "description": [
    "Oscar64 is a C/C++ cross-compiler that runs on modern systems (such as Windows PCs, Macs, or Linux machines) and targets the classic 6502 family of processors. It is primarily focused on Commodore systems such as the C64, PET, and VIC20. The compiler supports C99 and many C++ features, including variadic templates and lambda functions.",
    "The goal of this compiler is to eliminate the need to write 6502 assembly code to achieve high code density and fast execution speed. It continues to improve thanks to the many games, demos, and tools developed with it. Oscar64 supports disk overlays and banked cartridges for larger projects."
  ],
  "homepage": "https://github.com/drmortalwombat/oscar64",
  "license": "GNU General Public License v3.0",
  "pros": [
    "Ease of use",
    "Good support for modern C features",
    "Partial support for C++ features",
    "Excellent optimizations",
    "Support for interrupts",
    "Support for overlays (compressed or uncompressed)",
    "Good documentation and tons of examples, even complete games",
    "Floating point support",
    ".d64 output",
    "Cartridge support"
  ],
  "cons": [
    "No separated linker, no external libraries",
    "No standard file functions (just mapped kernal functions)"
  ],
  "features": {
    "floatingPoint": {
      "supported": "yes",
      "note": "no NaN support"
    },
    "inlineAssembly": "yes",
    "overlays": "yes",
    "fileIO": {
      "supported": "no",
      "note": "CBM based file ops are supported"
    },
    "printf": "yes",
    "recursiveFunctions": "yes",
    "interruptSupport": "yes",
    "maintained": "yes"
  },
  "libraries": {
    "assert": "yes",
    "complex": "no",
    "conio": "yes",
    "ctype": "yes",
    "errno": "no",
    "fenv": "no",
    "float": "no",
    "inttypes": "yes",
    "iso646": "yes",
    "limits": "yes",
    "locale": "no",
    "math": "yes",
    "setjmp": "yes",
    "signal": "no",
    "stdalign": "no",
    "stdarg": "yes",
    "stdatomic": "no",
    "stdbit": "no",
    "stdbool": "yes",
    "stddef": "yes",
    "stdint": "yes",
    "stdio": "yes",
    "stdlib": "yes",
    "stdnoreturn": "no",
    "string": "yes",
    "tgmath": "no",
    "threads": "no",
    "time": "yes",
    "uchar": "no",
    "wchar": "no",
    "wctype": "no"
  },
  "runtimeSupport": [
    "Commodore C64",
    "Commodore C128",
    "Commodore PLUS4",
    "Commodore VIC20",
    "Commodore PET",
    "Nintendo Entertainment System",
    "Atari 8bit Systems",
    "Commander X16",
    "Mega 65"
  ],
  "configurations": {
    "o64p": {
      "name": "Oscar64 - Perf.Opt.",
      "description": "-O3 -dHEAPCHECK -dNOBSSCLEAR -dNOZPCLEAR",
      "optimization": "performance",
      "color": "#a9ff9f"
    },
    "o64s": {
      "name": "Oscar64 - Size Opt.",
      "description": "-O -Os -Oo -Oz -Op -dNOLONG -dNOFLOAT",
      "optimization": "size",
      "color": "#a9ff9f"
    }
  },
  "version": "1.31.262",
  "date": "2025-07-15 06:35:39",
  "results": {
    "o64p": {
      "aes256": {
        "size": 3841,
        "time": 12.5,
        "status": "pass",
        "output": "0400                                          \n0428      **** commodore 64 basic v2 ****     \n0450                                          \n0478   64k ram system  38911 basic bytes free \n04a0                                          \n04c8  ready.                                  \n04f0  load\"aes256-o64p\",8,1                   \n0518                                          \n0540  searching for aes256-o64p               \n0568  loading                                 \n0590  ?load  error                            \n05b8  ready.                                  \n05e0  run:                                    \n0608  Calibrating frequency: 50 Hz            \n0630                                          \n0658  aes256.c                                \n0680  Encrypts the C64 kernel                 \n06a8  CRC32=FF1EE2C1 [OK]                     \n06d0  Total time: 12.5 s                      \n06f8                                          \n0720                                          \n0748                                          \n0770                                          \n0798                                          \n07c0                                          \n"
      },
      "crc8": {
        "size": 2343,
        "time": 0.8,
        "status": "pass",
        "output": "0400                                          \n0428      **** commodore 64 basic v2 ****     \n0450                                          \n0478   64k ram system  38911 basic bytes free \n04a0                                          \n04c8  ready.                                  \n04f0  load\"crc8-o64p\",8,1                     \n0518                                          \n0540  searching for crc8-o64p                 \n0568  loading                                 \n0590  ?load  error                            \n05b8  ready.                                  \n05e0  run:                                    \n0608  Calibrating frequency: 50 Hz            \n0630                                          \n0658  crc8.c                                  \n0680  Calculates the CRC8 of the C64 Kernal   \n06a8                                          \n06d0  CRC8=A2 [OK]                            \n06f8  Total time: 0.8 s                       \n0720                                          \n0748                                          \n0770                                          \n0798                                          \n07c0                                          \n"
      },
      "crc16": {
        "size": 2403,
        "time": 1.6,
        "status": "pass",
        "output": "0400                                          \n0428      **** commodore 64 basic v2 ****     \n0450                                          \n0478   64k ram system  38911 basic bytes free \n04a0                                          \n04c8  ready.                                  \n04f0  load\"crc16-o64p\",8,1                    \n0518                                          \n0540  searching for crc16-o64p                \n0568  loading                                 \n0590  ?load  error                            \n05b8  ready.                                  \n05e0  run:                                    \n0608  Calibrating frequency: 50 Hz            \n0630                                          \n0658  crc16.c                                 \n0680  Calculates the CRC16 of the C64 Kernal  \n06a8                                          \n06d0  CRC16=FFD0 [OK]                         \n06f8  Total time: 1.6 s                       \n0720                                          \n0748                                          \n0770                                          \n0798                                          \n07c0                                          \n"
      },
      "crc32": {
        "size": 2507,
        "time": 2.5,
        "status": "pass",
        "output": "0400                                          \n0428      **** commodore 64 basic v2 ****     \n0450                                          \n0478   64k ram system  38911 basic bytes free \n04a0                                          \n04c8  ready.                                  \n04f0  load\"crc32-o64p\",8,1                    \n0518                                          \n0540  searching for crc32-o64p                \n0568  loading                                 \n0590  ?load  error                            \n05b8  ready.                                  \n05e0  run:                                    \n0608  Calibrating frequency: 50 Hz            \n0630                                          \n0658  crc32.c                                 \n0680  Calculates the CRC32 of the C64 Kernal  \n06a8                                          \n06d0  CRC32=E1FA84C6 [OK]                     \n06f8  Total time: 2.5 s                       \n0720                                          \n0748                                          \n0770                                          \n0798                                          \n07c0                                          \n"
      },
      "dhrystone": {
        "size": 5382,
        "time": 1.6,
        "status": "pass",
        "output": "0400  the classic dhrystone benchmark         \n0428                                          \n0450  Dhrystone Benchmark, Version 2.1 (Langua\n0478  ge: C)                                  \n04a0                                          \n04c8  Execution starts, 1000 runs through Dhry\n04f0  stone                                   \n0518                                          \n0540  Int_Glob == 5 [OK]                      \n0568  Bool_Glob == 1 [OK]                     \n0590  Ch_1_Glob == 'A' [OK]                   \n05b8  Ch_2_Glob == 'B' [OK]                   \n05e0  Arr_1_Glob[8] == 7 [OK]                 \n0608  Arr_2_Glob[8][7] == NOR + 10 [OK]       \n0630  Discr == 0 [OK]                         \n0658  Enum_Comp == 2 [OK]                     \n0680  Int_Comp == 17 [OK]                     \n06a8  Str_Comp == DHRYSTONE... [OK]           \n06d0  Ptr_Comp == Ptr_Comp [OK]               \n06f8  Discr == 0 [OK]                         \n0720  Enum_Comp == 1 [OK]                     \n0748  Int_Comp == 18 [OK]                     \n0770                                          \n0798  Total time: 1.6 s                       \n07c0                                          \n"
      },
      "fact": {
        "size": 3134,
        "time": 0,
        "status": "pass",
        "output": "0400                                          \n0428      **** commodore 64 basic v2 ****     \n0450                                          \n0478   64k ram system  38911 basic bytes free \n04a0                                          \n04c8  ready.                                  \n04f0  load\"fact-o64p\",8,1                     \n0518                                          \n0540  searching for fact-o64p                 \n0568  loading                                 \n0590  ?load  error                            \n05b8  ready.                                  \n05e0  run:                                    \n0608  Calibrating frequency: 50 Hz            \n0630                                          \n0658  fact.c                                  \n0680  Calculates factorials (1000 iterations) \n06a8                                          \n06d0  res=188806544 [OK]                      \n06f8  Total time: 0.0 s                       \n0720                                          \n0748                                          \n0770                                          \n0798                                          \n07c0                                          \n"
      },
      "pi": {
        "size": 3578,
        "time": 47.7,
        "status": "pass",
        "output": "0400                                          \n0428      **** commodore 64 basic v2 ****     \n0450                                          \n0478   64k ram system  38911 basic bytes free \n04a0                                          \n04c8  ready.                                  \n04f0  load\"pi-o64p\",8,1                       \n0518                                          \n0540  searching for pi-o64p                   \n0568  loading                                 \n0590  ?load  error                            \n05b8  ready.                                  \n05e0  run:                                    \n0608  Calibrating frequency: 50 Hz            \n0630                                          \n0658  pi.c                                    \n0680  Calculates 160 digits of pi             \n06a8  3141592653589793238462643383279502884197\n06d0  1693993751058209749445923078164062862089\n06f8  9862803482534211706798214808651328230664\n0720  7093844609550582231725359408128481117450\n0748                                          \n0770  carry=2822 [OK]                         \n0798  Total time: 47.7 s                      \n07c0                                          \n"
      },
      "pow": {
        "size": 6884,
        "time": 3.3,
        "status": "pass",
        "output": "0400      **** commodore 64 basic v2 ****     \n0428                                          \n0450   64k ram system  38911 basic bytes free \n0478                                          \n04a0  ready.                                  \n04c8  load\"pow-o64p\",8,1                      \n04f0                                          \n0518  searching for pow-o64p                  \n0540  loading                                 \n0568  ?load  error                            \n0590  ready.                                  \n05b8  run:                                    \n05e0  Calibrating frequency: 50 Hz            \n0608                                          \n0630  pow.c                                   \n0658  Calculates floating point exponential (1\n0680  0 iterations)                           \n06a8                                          \n06d0  res      = 3.614002E+12                 \n06f8  expected = 3.614006E+12                 \n0720  epsilon  = 1.000000E+07                 \n0748  diff     = 4.456447E+06 [OK]            \n0770                                          \n0798  Total time: 3.3 s                       \n07c0                                          \n"
      },
      "puff2": {
        "size": 15989,
        "time": 7.3,
        "status": "pass",
        "output": "0400                                          \n0428      **** commodore 64 basic v2 ****     \n0450                                          \n0478   64k ram system  38911 basic bytes free \n04a0                                          \n04c8  ready.                                  \n04f0  load\"puff2-o64p\",8,1                    \n0518                                          \n0540  searching for puff2-o64p                \n0568  loading                                 \n0590  ?load  error                            \n05b8  ready.                                  \n05e0  run:                                    \n0608  Calibrating frequency: 50 Hz            \n0630                                          \n0658  puff.c                                  \n0680  inflate compressed data                 \n06a8  RES=0                                   \n06d0  slen=3407 dlen=4096                     \n06f8                                          \n0720  CRC32=28ED93C7 [OK]                     \n0748  Total time: 7.3 s                       \n0770                                          \n0798                                          \n07c0                                          \n"
      },
      "sieve": {
        "size": 2867,
        "time": 9.7,
        "status": "pass",
        "output": "0400                                          \n0428      **** commodore 64 basic v2 ****     \n0450                                          \n0478   64k ram system  38911 basic bytes free \n04a0                                          \n04c8  ready.                                  \n04f0  load\"sieve-o64p\",8,1                    \n0518                                          \n0540  searching for sieve-o64p                \n0568  loading                                 \n0590  ?load  error                            \n05b8  ready.                                  \n05e0  run:                                    \n0608  Calibrating frequency: 50 Hz            \n0630                                          \n0658  sieve.c                                 \n0680  Calculates the primes from 1 to 16384 (1\n06a8  0 iterations)                           \n06d0                                          \n06f8  count=1900 [OK]                         \n0720  Total time: 9.7 s                       \n0748                                          \n0770                                          \n0798                                          \n07c0                                          \n"
      },
      "sieve_bit": {
        "size": 2825,
        "time": 16.1,
        "status": "pass",
        "output": "0400                                          \n0428      **** commodore 64 basic v2 ****     \n0450                                          \n0478   64k ram system  38911 basic bytes free \n04a0                                          \n04c8  ready.                                  \n04f0  load\"sieve_bit-o64p\",8,1                \n0518                                          \n0540  searching for sieve_bit-o64p            \n0568  loading                                 \n0590  ?load  error                            \n05b8  ready.                                  \n05e0  run:                                    \n0608  Calibrating frequency: 50 Hz            \n0630                                          \n0658  sieve_bit.c                             \n0680  Calculates the primes from 1 to 32002 (4\n06a8   iterations)                            \n06d0                                          \n06f8  count=3432 [OK]                         \n0720  Total time: 16.1 s                      \n0748                                          \n0770                                          \n0798                                          \n07c0                                          \n"
      }
    },
    "o64s": {
      "aes256": {
        "size": 2811,
        "time": 16.6,
        "status": "pass",
        "output": "0400                                          \n0428      **** commodore 64 basic v2 ****     \n0450                                          \n0478   64k ram system  38911 basic bytes free \n04a0                                          \n04c8  ready.                                  \n04f0  load\"aes256-o64s\",8,1                   \n0518                                          \n0540  searching for aes256-o64s               \n0568  loading                                 \n0590  ?load  error                            \n05b8  ready.                                  \n05e0  run:                                    \n0608  Calibrating frequency: 50 Hz            \n0630                                          \n0658  aes256.c                                \n0680  Encrypts the C64 kernel                 \n06a8  CRC32=FF1EE2C1 [OK]                     \n06d0  Total time: 16.6 s                      \n06f8                                          \n0720                                          \n0748                                          \n0770                                          \n0798                                          \n07c0                                          \n"
      },
      "crc8": {
        "size": 1611,
        "time": 0.8,
        "status": "pass",
        "output": "0400                                          \n0428      **** commodore 64 basic v2 ****     \n0450                                          \n0478   64k ram system  38911 basic bytes free \n04a0                                          \n04c8  ready.                                  \n04f0  load\"crc8-o64s\",8,1                     \n0518                                          \n0540  searching for crc8-o64s                 \n0568  loading                                 \n0590  ?load  error                            \n05b8  ready.                                  \n05e0  run:                                    \n0608  Calibrating frequency: 50 Hz            \n0630                                          \n0658  crc8.c                                  \n0680  Calculates the CRC8 of the C64 Kernal   \n06a8                                          \n06d0  CRC8=A2 [OK]                            \n06f8  Total time: 0.8 s                       \n0720                                          \n0748                                          \n0770                                          \n0798                                          \n07c0                                          \n"
      },
      "crc16": {
        "size": 1639,
        "time": 1.6,
        "status": "pass",
        "output": "0400                                          \n0428      **** commodore 64 basic v2 ****     \n0450                                          \n0478   64k ram system  38911 basic bytes free \n04a0                                          \n04c8  ready.                                  \n04f0  load\"crc16-o64s\",8,1                    \n0518                                          \n0540  searching for crc16-o64s                \n0568  loading                                 \n0590  ?load  error                            \n05b8  ready.                                  \n05e0  run:                                    \n0608  Calibrating frequency: 50 Hz            \n0630                                          \n0658  crc16.c                                 \n0680  Calculates the CRC16 of the C64 Kernal  \n06a8                                          \n06d0  CRC16=FFD0 [OK]                         \n06f8  Total time: 1.6 s                       \n0720                                          \n0748                                          \n0770                                          \n0798                                          \n07c0                                          \n"
      },
      "crc32": {
        "size": 1700,
        "time": 2.5,
        "status": "pass",
        "output": "0400                                          \n0428      **** commodore 64 basic v2 ****     \n0450                                          \n0478   64k ram system  38911 basic bytes free \n04a0                                          \n04c8  ready.                                  \n04f0  load\"crc32-o64s\",8,1                    \n0518                                          \n0540  searching for crc32-o64s                \n0568  loading                                 \n0590  ?load  error                            \n05b8  ready.                                  \n05e0  run:                                    \n0608  Calibrating frequency: 50 Hz            \n0630                                          \n0658  crc32.c                                 \n0680  Calculates the CRC32 of the C64 Kernal  \n06a8                                          \n06d0  CRC32=E1FA84C6 [OK]                     \n06f8  Total time: 2.5 s                       \n0720                                          \n0748                                          \n0770                                          \n0798                                          \n07c0                                          \n"
      },
      "dhrystone": {
        "size": 2846,
        "time": 1.7,
        "status": "pass",
        "output": "0400  the classic dhrystone benchmark         \n0428                                          \n0450  Dhrystone Benchmark, Version 2.1 (Langua\n0478  ge: C)                                  \n04a0                                          \n04c8  Execution starts, 1000 runs through Dhry\n04f0  stone                                   \n0518                                          \n0540  Int_Glob == 5 [OK]                      \n0568  Bool_Glob == 1 [OK]                     \n0590  Ch_1_Glob == 'A' [OK]                   \n05b8  Ch_2_Glob == 'B' [OK]                   \n05e0  Arr_1_Glob[8] == 7 [OK]                 \n0608  Arr_2_Glob[8][7] == NOR + 10 [OK]       \n0630  Discr == 0 [OK]                         \n0658  Enum_Comp == 2 [OK]                     \n0680  Int_Comp == 17 [OK]                     \n06a8  Str_Comp == DHRYSTONE... [OK]           \n06d0  Ptr_Comp == Ptr_Comp [OK]               \n06f8  Discr == 0 [OK]                         \n0720  Enum_Comp == 1 [OK]                     \n0748  Int_Comp == 18 [OK]                     \n0770                                          \n0798  Total time: 1.7 s                       \n07c0                                          \n"
      },
      "fact": {
        "size": 1980,
        "time": 42.9,
        "status": "pass",
        "output": "0400                                          \n0428      **** commodore 64 basic v2 ****     \n0450                                          \n0478   64k ram system  38911 basic bytes free \n04a0                                          \n04c8  ready.                                  \n04f0  load\"fact-o64s\",8,1                     \n0518                                          \n0540  searching for fact-o64s                 \n0568  loading                                 \n0590  ?load  error                            \n05b8  ready.                                  \n05e0  run:                                    \n0608  Calibrating frequency: 50 Hz            \n0630                                          \n0658  fact.c                                  \n0680  Calculates factorials (1000 iterations) \n06a8                                          \n06d0  res=188806544 [OK]                      \n06f8  Total time: 42.9 s                      \n0720                                          \n0748                                          \n0770                                          \n0798                                          \n07c0                                          \n"
      },
      "pi": {
        "size": 2217,
        "time": 48.3,
        "status": "pass",
        "output": "0400                                          \n0428      **** commodore 64 basic v2 ****     \n0450                                          \n0478   64k ram system  38911 basic bytes free \n04a0                                          \n04c8  ready.                                  \n04f0  load\"pi-o64s\",8,1                       \n0518                                          \n0540  searching for pi-o64s                   \n0568  loading                                 \n0590  ?load  error                            \n05b8  ready.                                  \n05e0  run:                                    \n0608  Calibrating frequency: 50 Hz            \n0630                                          \n0658  pi.c                                    \n0680  Calculates 160 digits of pi             \n06a8  3141592653589793238462643383279502884197\n06d0  1693993751058209749445923078164062862089\n06f8  9862803482534211706798214808651328230664\n0720  7093844609550582231725359408128481117450\n0748                                          \n0770  carry=2822 [OK]                         \n0798  Total time: 48.3 s                      \n07c0                                          \n"
      },
      "pow": {
        "size": 3674,
        "time": 3.9,
        "status": "pass",
        "output": "0400      **** commodore 64 basic v2 ****     \n0428                                          \n0450   64k ram system  38911 basic bytes free \n0478                                          \n04a0  ready.                                  \n04c8  load\"pow-o64s\",8,1                      \n04f0                                          \n0518  searching for pow-o64s                  \n0540  loading                                 \n0568  ?load  error                            \n0590  ready.                                  \n05b8  run:                                    \n05e0  Calibrating frequency: 50 Hz            \n0608                                          \n0630  pow.c                                   \n0658  Calculates floating point exponential (1\n0680  0 iterations)                           \n06a8                                          \n06d0  res      = e                            \n06f8  expected = e                            \n0720  epsilon  = e                            \n0748  diff     = e [OK]                       \n0770                                          \n0798  Total time: 3.9 s                       \n07c0                                          \n"
      },
      "puff2": {
        "size": 8867,
        "time": 12.3,
        "status": "pass",
        "output": "0400                                          \n0428      **** commodore 64 basic v2 ****     \n0450                                          \n0478   64k ram system  38911 basic bytes free \n04a0                                          \n04c8  ready.                                  \n04f0  load\"puff2-o64s\",8,1                    \n0518                                          \n0540  searching for puff2-o64s                \n0568  loading                                 \n0590  ?load  error                            \n05b8  ready.                                  \n05e0  run:                                    \n0608  Calibrating frequency: 50 Hz            \n0630                                          \n0658  puff.c                                  \n0680  inflate compressed data                 \n06a8  RES=0                                   \n06d0  slen=3407 dlen=4096                     \n06f8                                          \n0720  CRC32=28ED93C7 [OK]                     \n0748  Total time: 12.3 s                      \n0770                                          \n0798                                          \n07c0                                          \n"
      },
      "sieve": {
        "size": 1642,
        "time": 10.4,
        "status": "pass",
        "output": "0400                                          \n0428      **** commodore 64 basic v2 ****     \n0450                                          \n0478   64k ram system  38911 basic bytes free \n04a0                                          \n04c8  ready.                                  \n04f0  load\"sieve-o64s\",8,1                    \n0518                                          \n0540  searching for sieve-o64s                \n0568  loading                                 \n0590  ?load  error                            \n05b8  ready.                                  \n05e0  run:                                    \n0608  Calibrating frequency: 50 Hz            \n0630                                          \n0658  sieve.c                                 \n0680  Calculates the primes from 1 to 16384 (1\n06a8  0 iterations)                           \n06d0                                          \n06f8  count=1900 [OK]                         \n0720  Total time: 10.4 s                      \n0748                                          \n0770                                          \n0798                                          \n07c0                                          \n"
      },
      "sieve_bit": {
        "size": 1710,
        "time": 16.2,
        "status": "pass",
        "output": "0400                                          \n0428      **** commodore 64 basic v2 ****     \n0450                                          \n0478   64k ram system  38911 basic bytes free \n04a0                                          \n04c8  ready.                                  \n04f0  load\"sieve_bit-o64s\",8,1                \n0518                                          \n0540  searching for sieve_bit-o64s            \n0568  loading                                 \n0590  ?load  error                            \n05b8  ready.                                  \n05e0  run:                                    \n0608  Calibrating frequency: 50 Hz            \n0630                                          \n0658  sieve_bit.c                             \n0680  Calculates the primes from 1 to 32002 (4\n06a8   iterations)                            \n06d0                                          \n06f8  count=3432 [OK]                         \n0720  Total time: 16.2 s                      \n0748                                          \n0770                                          \n0798                                          \n07c0                                          \n"
      }
    }
  }
}